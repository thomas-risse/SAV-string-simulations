name: C/C++ CI

on:
  workflow_dispatch

jobs:
  build_max_macARM:

    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Install submodules
      run: git submodule update --init --recursive
    - name: Install Eigen
      run: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        brew install eigen
    - name: Build external
      run: |
        cd src/maxmsp
        rm -rf ./1dSAV/build/ || true
        mkdir -p ./1dSAV/build
        cd ./1dSAV/build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config "Release"
        cd ../../
        zip -r "package.zip" ./1dSAV/externals
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release mac ARM ${{ github.ref }}
        draft: true
        prerelease: false
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./package.zip
        asset_name: package.zip
        asset_content_type: application/zip
    - name: Publish release
      uses: StuYarrow/publish-release@v1.1.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        id: ${{ steps.create_release.outputs.id }}
      
